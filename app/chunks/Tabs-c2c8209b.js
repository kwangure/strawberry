import{S as s,i as t,s as a,e,j as r,c as n,a as o,m as l,d as i,b as p,f as c,o as u,x as m,u as d,v as h,D as f,B as b,k as $,n as v,K as y,L as g,G as w,M as x,r as j,w as N,E as P,p as S,N as k,O,P as z}from"./vendor-60cb395e.js";import{c as B}from"./forward-events-13fb088f.js";import{I as D}from"./Path-ca4bed92.js";function E(s){let t,a,f;return a=new D({props:{path:s[1]}}),{c(){t=e("span"),r(a.$$.fragment),this.h()},l(s){t=n(s,"SPAN",{class:!0});var e=o(t);l(a.$$.fragment,e),e.forEach(i),this.h()},h(){p(t,"class","button-prefix svelte-1dz0pup")},m(s,e){c(s,t,e),u(a,t,null),f=!0},p(s,t){const e={};2&t&&(e.path=s[1]),a.$set(e)},i(s){f||(m(a.$$.fragment,s),f=!0)},o(s){d(a.$$.fragment,s),f=!1},d(s){s&&i(t),h(a)}}}function T(s){let t,a,r,l,u,h,k=s[1]&&E(s);const O=s[6].default,z=f(O,s,s[5],null);let B=[{class:"berry-button"},s[4]],D={};for(let e=0;e<B.length;e+=1)D=b(D,B[e]);return{c(){t=e("button"),a=e("div"),k&&k.c(),r=$(),z&&z.c(),this.h()},l(s){t=n(s,"BUTTON",{class:!0});var e=o(t);a=n(e,"DIV",{class:!0});var l=o(a);k&&k.l(l),r=v(l),z&&z.l(l),l.forEach(i),e.forEach(i),this.h()},h(){p(a,"class","content-wrapper svelte-1dz0pup"),y(t,D),g(t,"primary",s[0]),g(t,"icon",s[1]),g(t,"slot_used",s[3].default),g(t,"svelte-1dz0pup",!0)},m(e,n){c(e,t,n),w(t,a),k&&k.m(a,null),w(a,r),z&&z.m(a,null),l=!0,u||(h=x(s[2].call(null,t)),u=!0)},p(s,[e]){s[1]?k?(k.p(s,e),2&e&&m(k,1)):(k=E(s),k.c(),m(k,1),k.m(a,r)):k&&(j(),d(k,1,1,(()=>{k=null})),N()),z&&z.p&&(!l||32&e)&&P(z,O,s,s[5],l?e:-1,null,null),y(t,D=S(B,[{class:"berry-button"},16&e&&s[4]])),g(t,"primary",s[0]),g(t,"icon",s[1]),g(t,"slot_used",s[3].default),g(t,"svelte-1dz0pup",!0)},i(s){l||(m(k),m(z,s),l=!0)},o(s){d(k),d(z,s),l=!1},d(s){s&&i(t),k&&k.d(),z&&z.d(s),u=!1,h()}}}function A(s,t,a){const e=["primary","icon"];let r=k(t,e),{$$slots:n={},$$scope:o}=t;const l=O(n);let{primary:i=!1}=t,{icon:p=""}=t;const c=B();return s.$$set=s=>{t=b(b({},t),z(s)),a(4,r=k(t,e)),"primary"in s&&a(0,i=s.primary),"icon"in s&&a(1,p=s.icon),"$$scope"in s&&a(5,o=s.$$scope)},[i,p,c,l,r,o,n]}class G extends s{constructor(s){super(),t(this,s,A,T,a,{primary:0,icon:1})}}const I=JSON.parse('{"name":"Button","slots":[{"name":"default"}],"description":"A button triggers an event or action. They let users know what will happen next.","props":[{"kind":"let","name":"primary","optional":true,"value":false,"jsDoc":{"description":"Indicates whether the button should be coloured using the primary colour.","tags":[{"description":"","name":""}]}},{"kind":"let","name":"icon","optional":true,"value":"","jsDoc":{"description":"A \\"d\\" string that is usable in an SVG path element.","tags":[{"description":"","name":""}]}}],"exports":[],"customProperties":[{"name":"--br-button-width","value":"auto"},{"name":"--br-button-border","value":"var(--br-border)"}]}');JSON.parse('{"name":"Group","slots":[{"name":"default"}],"description":"","props":[],"exports":[],"customProperties":[]}');JSON.parse('{"name":"Tabs","slots":[],"description":"","props":[{"kind":"let","name":"tabs","optional":true}],"exports":[],"customProperties":[]}');export{G as B,I as d};
