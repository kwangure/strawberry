import{S as h,i as v,s as b,D,e as j,c as k,a as y,d as i,b as E,f as _,E as I,F as A,G as H,x as u,u as m,a4 as M,j as $,m as p,o as d,v as g,k as T,t as C,n as V,g as x,H as S,I as q}from"../../chunks/vendor-fab38dda.js";import{d as z,C as w}from"../../chunks/JavaScript.svelte_svelte_type_style_lang-99e8b40e.js";import{C as F,j as G}from"../../chunks/component-b40fa36f.js";function J(l){let e,a;const n=l[1].default,s=D(n,l,l[0],null);return{c(){e=j("div"),s&&s.c(),this.h()},l(t){e=k(t,"DIV",{class:!0});var r=y(e);s&&s.l(r),r.forEach(i),this.h()},h(){E(e,"class","language-xml")},m(t,r){_(t,e,r),s&&s.m(e,null),a=!0},p(t,[r]){s&&s.p&&(!a||r&1)&&I(s,n,t,t[0],a?H(n,t[0],r,null):A(t[0]),null)},i(t){a||(u(s,t),a=!0)},o(t){m(s,t),a=!1},d(t){t&&i(e),s&&s.d(t)}}}const L="xml";function O(l,e,a){let{$$slots:n={},$$scope:s}=e;return l.$$set=t=>{"$$scope"in t&&a(0,s=t.$$scope)},[s,n]}class B extends h{constructor(e){super();v(this,e,O,J,b,{})}}var K=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",default:B,name:L,highlighter:M});const N={main:z};function P(l){let e,a,n,s,t,r,f;return e=new w({props:{language:G,code:"const five = 5;"}}),t=new w({props:{language:K,inline:!0,code:"<!-- codeblock -->"}}),{c(){$(e.$$.fragment),a=T(),n=j("div"),s=C("An inline "),$(t.$$.fragment),r=C(" just for you!")},l(o){p(e.$$.fragment,o),a=V(o),n=k(o,"DIV",{});var c=y(n);s=x(c,"An inline "),p(t.$$.fragment,c),r=x(c," just for you!"),c.forEach(i)},m(o,c){d(e,o,c),_(o,a,c),_(o,n,c),S(n,s),d(t,n,null),S(n,r),f=!0},p:q,i(o){f||(u(e.$$.fragment,o),u(t.$$.fragment,o),f=!0)},o(o){m(e.$$.fragment,o),m(t.$$.fragment,o),f=!1},d(o){g(e,o),o&&i(a),o&&i(n),g(t)}}}function Q(l){let e,a;return e=new F({props:{docs:N,$$slots:{block:[P]},$$scope:{ctx:l}}}),{c(){$(e.$$.fragment)},l(n){p(e.$$.fragment,n)},m(n,s){d(e,n,s),a=!0},p(n,[s]){const t={};s&1&&(t.$$scope={dirty:s,ctx:n}),e.$set(t)},i(n){a||(u(e.$$.fragment,n),a=!0)},o(n){m(e.$$.fragment,n),a=!1},d(n){g(e,n)}}}class X extends h{constructor(e){super();v(this,e,null,Q,b,{})}}export{X as default};
