import{S as X,i as z,s as Q,F as R,e as E,k as V,c as A,a as S,d as h,m as B,b as m,K as G,g as C,J as j,a2 as J,O as ee,L as P,G as Z,H as x,I as $,W as te,n as ne,o as v,p as ie,q as y,X as ae,N as le,t as O,h as W,j as se,E as L,w as F,x as H,y as Y,B as N}from"../../../chunks/index-9f7629f3.js";import{C as oe,c as re}from"../../../chunks/svelte-02f513e0.js";import{C as ue}from"../../../chunks/component-5b135dda.js";/* empty css                                 */import{c as me}from"../../../chunks/forward-events-932ef468.js";import{v as ce}from"../../../chunks/validate-b736ccb8.js";import{w as fe}from"../../../chunks/index-a17fd075.js";const de=a=>({}),U=a=>({}),pe=a=>({}),K=a=>({});function ge(a){let e;const t=a[18].hint,n=R(t,a,a[17],U);return{c(){n&&n.c()},l(l){n&&n.l(l)},m(l,i){n&&n.m(l,i),e=!0},p(l,i){n&&n.p&&(!e||i&131072)&&Z(n,t,l,l[17],e?$(t,l[17],i,de):x(l[17]),U)},i(l){e||(y(n,l),e=!0)},o(l){v(n,l),e=!1},d(l){n&&n.d(l)}}}function _e(a){let e;return{c(){e=O(a[14])},l(t){e=W(t,a[14])},m(t,n){C(t,e,n)},p(t,n){n&16384&&se(e,t[14])},i:L,o:L,d(t){t&&h(e)}}}function he(a){let e,t,n,l,i,b,k,p,f,d,u,D,T;const w=a[18].label,c=R(w,a,a[17],K),I=[_e,ge],g=[];function q(s,r){return s[14]?0:1}return f=q(a),d=g[f]=I[f](a),{c(){e=E("label"),t=E("div"),c&&c.c(),n=V(),l=E("div"),i=E("input"),k=V(),p=E("div"),d.c(),this.h()},l(s){e=A(s,"LABEL",{class:!0});var r=S(e);t=A(r,"DIV",{class:!0});var _=S(t);c&&c.l(_),_.forEach(h),n=B(r),l=A(r,"DIV",{class:!0});var M=S(l);i=A(M,"INPUT",{autocomplete:!0,form:!0,list:!0,max:!0,min:!0,name:!0,step:!0,class:!0,type:!0}),M.forEach(h),k=B(r),p=A(r,"DIV",{class:!0});var o=S(p);d.l(o),o.forEach(h),r.forEach(h),this.h()},h(){m(t,"class","label-text svelte-13t3ggu"),m(i,"autocomplete",a[1]),i.autofocus=a[2],i.disabled=a[4],m(i,"form",a[5]),m(i,"list",a[7]),m(i,"max",a[8]),m(i,"min",a[9]),m(i,"name",a[10]),i.readOnly=a[11],i.required=a[12],m(i,"step",a[13]),m(i,"class","text-input svelte-13t3ggu"),m(i,"type","time"),m(l,"class","container svelte-13t3ggu"),m(p,"class","hint svelte-13t3ggu"),G(p,"invalid",a[14]),m(e,"class","svelte-13t3ggu")},m(s,r){C(s,e,r),j(e,t),c&&c.m(t,null),j(e,n),j(e,l),j(l,i),J(i,a[0]),j(e,k),j(e,p),g[f].m(p,null),u=!0,a[2]&&i.focus(),D||(T=[ee(i,"input",a[19]),P(a[15].call(null,i)),P(b=ce.call(null,i,{invalid:a[6],error:a[3],errorMessage:a[16]}))],D=!0)},p(s,[r]){c&&c.p&&(!u||r&131072)&&Z(c,w,s,s[17],u?$(w,s[17],r,pe):x(s[17]),K),(!u||r&2)&&m(i,"autocomplete",s[1]),(!u||r&4)&&(i.autofocus=s[2]),(!u||r&16)&&(i.disabled=s[4]),(!u||r&32)&&m(i,"form",s[5]),(!u||r&128)&&m(i,"list",s[7]),(!u||r&256)&&m(i,"max",s[8]),(!u||r&512)&&m(i,"min",s[9]),(!u||r&1024)&&m(i,"name",s[10]),(!u||r&2048)&&(i.readOnly=s[11]),(!u||r&4096)&&(i.required=s[12]),(!u||r&8192)&&m(i,"step",s[13]),r&1&&J(i,s[0]),b&&te(b.update)&&r&72&&b.update.call(null,{invalid:s[6],error:s[3],errorMessage:s[16]});let _=f;f=q(s),f===_?g[f].p(s,r):(ne(),v(g[_],1,1,()=>{g[_]=null}),ie(),d=g[f],d?d.p(s,r):(d=g[f]=I[f](s),d.c()),y(d,1),d.m(p,null)),r&16384&&G(p,"invalid",s[14])},i(s){u||(y(c,s),y(d),u=!0)},o(s){v(c,s),v(d),u=!1},d(s){s&&h(e),c&&c.d(s),g[f].d(),D=!1,ae(T)}}}const be=JSON.parse('{"name":"Time","slots":[{"name":"label","htmlDoc":null},{"name":"hint","htmlDoc":null}],"description":"","props":[{"kind":"let","name":"autocomplete","optional":true,"value":"","jsDoc":{"description":"Guidance to the browser on information expected in the field. Helps UserAgent automate filling form field values.","tags":[{"description":"","name":"","tag":"type","type":"\\"off\\" | \\"on\\" | string"}]}},{"kind":"let","name":"autofocus","optional":true,"value":false,"jsDoc":{"description":"When true, the button will have input focus when the page loads.","tags":[{"description":"","name":"","tag":"type","type":"boolean"}]}},{"kind":"let","name":"error","optional":true,"jsDoc":{"description":"A function that takes a validity state string and returns an error message.","tags":[{"description":"","name":"","tag":"type","type":"((error: string, input: HTMLInputElement) => string) | undefined"}]}},{"kind":"let","name":"disabled","optional":true,"value":false,"jsDoc":{"description":"When true, the input cannot be edited or focused.","tags":[{"description":"","name":"","tag":"type","type":"boolean"}]}},{"kind":"let","name":"form","optional":true,"jsDoc":{"description":"The ID of the form element that the time input is associated with.","tags":[{"description":"","name":"","tag":"type","type":"string | undefined"}]}},{"kind":"let","name":"invalid","optional":true,"jsDoc":{"description":"A function that returns the validity of the input.","tags":[{"description":"","name":"","tag":"type","type":"((input: HTMLInputElement) => string) | undefined"}]}},{"kind":"let","name":"list","optional":true,"value":"","jsDoc":{"description":"The id of a <datalist> element located in the same document.","tags":[{"description":"","name":"","tag":"type","type":"string"}]}},{"kind":"let","name":"max","optional":true,"value":"","jsDoc":{"description":"A string representing the latest time to accept.","tags":[{"description":"","name":"","tag":"type","type":"string"}]}},{"kind":"let","name":"min","optional":true,"value":"","jsDoc":{"description":"A string representing the earliest time to accept","tags":[{"description":"","name":"","tag":"type","type":"string"}]}},{"kind":"let","name":"name","optional":true,"value":"","jsDoc":{"description":"The name of the time input. Submitted with its parent form as part of a name/value pair.","tags":[{"description":"","name":"","tag":"type","type":"string"}]}},{"kind":"let","name":"readonly","optional":true,"value":false,"jsDoc":{"description":"When true, the user cannot edit the value of the input","tags":[{"description":"","name":"","tag":"type","type":"boolean"}]}},{"kind":"let","name":"required","optional":true,"value":false,"jsDoc":{"description":"When true, indicates that the user must input a value before the parent form can be submitted.","tags":[{"description":"","name":"","tag":"type","type":"boolean"}]}},{"kind":"let","name":"step","optional":true,"value":60,"jsDoc":{"description":"The granularity in seconds that the time input value must adhere to","tags":[{"description":"","name":"","tag":"type","type":"number"}]}},{"kind":"let","name":"value","optional":true,"value":"","jsDoc":{"description":"The initial value of the input. An ISO 8601 dateString or Date.","tags":[{"description":"","name":"","tag":"type","type":"string"}]}}],"exports":[{"kind":"const","name":"docs","optional":true,"value":true}],"customProperties":[]}');function ve(a,e,t){let n,{$$slots:l={},$$scope:i}=e,{autocomplete:b=""}=e,{autofocus:k=!1}=e,{error:p=void 0}=e,{disabled:f=!1}=e,{form:d=void 0}=e,{invalid:u=void 0}=e,{list:D=""}=e,{max:T=""}=e,{min:w=""}=e,{name:c=""}=e,{readonly:I=!1}=e,{required:g=!1}=e,{step:q=60}=e,{value:s=""}=e;const r=me(),_=fe("");le(a,_,o=>t(14,n=o));function M(){s=this.value,t(0,s)}return a.$$set=o=>{"autocomplete"in o&&t(1,b=o.autocomplete),"autofocus"in o&&t(2,k=o.autofocus),"error"in o&&t(3,p=o.error),"disabled"in o&&t(4,f=o.disabled),"form"in o&&t(5,d=o.form),"invalid"in o&&t(6,u=o.invalid),"list"in o&&t(7,D=o.list),"max"in o&&t(8,T=o.max),"min"in o&&t(9,w=o.min),"name"in o&&t(10,c=o.name),"readonly"in o&&t(11,I=o.readonly),"required"in o&&t(12,g=o.required),"step"in o&&t(13,q=o.step),"value"in o&&t(0,s=o.value),"$$scope"in o&&t(17,i=o.$$scope)},[s,b,k,p,f,d,u,D,T,w,c,I,g,q,n,r,_,i,l,M]}class ye extends X{constructor(e){super(),z(this,e,ve,he,Q,{autocomplete:1,autofocus:2,error:3,disabled:4,form:5,invalid:6,list:7,max:8,min:9,name:10,readonly:11,required:12,step:13,value:0})}}const ke={main:be};function De(a){let e;return{c(){e=O("I label your time!")},l(t){e=W(t,"I label your time!")},m(t,n){C(t,e,n)},d(t){t&&h(e)}}}function we(a){let e,t;return e=new ye({props:{value:new Date,$$slots:{label:[De]},$$scope:{ctx:a}}}),{c(){F(e.$$.fragment)},l(n){H(e.$$.fragment,n)},m(n,l){Y(e,n,l),t=!0},p(n,l){const i={};l&1&&(i.$$scope={dirty:l,ctx:n}),e.$set(i)},i(n){t||(y(e.$$.fragment,n),t=!0)},o(n){v(e.$$.fragment,n),t=!1},d(n){N(e,n)}}}function je(a){let e,t,n;return t=new oe({props:{language:re,code:`
<div class="element">
    <Time>
        <svelte:fragment slot="label">
            Delivery time
        </svelte:fragment>
    </Time>
</div>

<style>
    .element {
        --br-input-time-label-position: absolute;
        --br-input-time-label-height: 1px;
        --br-input-time-label-width: 1px;
        --br-input-time-label-overflow: hidden;
    }
</style>
`}}),{c(){e=O(`You should always include the label text for the input for the benefit
        of screen-reader users. You may use custom-properties to visually
        hide it if you must. For example:
        `),F(t.$$.fragment)},l(l){e=W(l,`You should always include the label text for the input for the benefit
        of screen-reader users. You may use custom-properties to visually
        hide it if you must. For example:
        `),H(t.$$.fragment,l)},m(l,i){C(l,e,i),Y(t,l,i),n=!0},p:L,i(l){n||(y(t.$$.fragment,l),n=!0)},o(l){v(t.$$.fragment,l),n=!1},d(l){l&&h(e),N(t,l)}}}function Te(a){let e,t;return e=new ue({props:{docs:ke,$$slots:{accessibility:[je],inline:[we]},$$scope:{ctx:a}}}),{c(){F(e.$$.fragment)},l(n){H(e.$$.fragment,n)},m(n,l){Y(e,n,l),t=!0},p(n,[l]){const i={};l&1&&(i.$$scope={dirty:l,ctx:n}),e.$set(i)},i(n){t||(y(e.$$.fragment,n),t=!0)},o(n){v(e.$$.fragment,n),t=!1},d(n){N(e,n)}}}class Le extends X{constructor(e){super(),z(this,e,null,Te,Q,{})}}export{Le as default};
